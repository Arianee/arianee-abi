/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions, EventOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { TransactionObject, ContractEvent, Callback } from "./types";

export class ArianeeMessage extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): ArianeeMessage;
  methods: {
    messages(
      arg0: number | string
    ): TransactionObject<{
      imprint: string;
      sender: string;
      to: string;
      tokenId: BN;
      0: string;
      1: string;
      2: string;
      3: BN;
    }>;

    readMessage(
      _messageId: number | string,
      _from: string
    ): TransactionObject<BN>;

    receiverToMessageIds(
      arg0: string,
      arg1: number | string
    ): TransactionObject<BN>;

    setStoreAddress(_storeAddress: string): TransactionObject<void>;

    owner(): TransactionObject<string>;

    messageLengthByReceiver(_receiver: string): TransactionObject<BN>;

    transferOwnership(_newOwner: string): TransactionObject<void>;

    sendMessage(
      _tokenId: number | string,
      _imprint: string | number[],
      _from: string,
      _reward: number | string
    ): TransactionObject<BN>;
  };
  events: {
    MessageSent: ContractEvent<{
      _receiver: string;
      _sender: string;
      _tokenId: BN;
      _messageId: BN;
      0: string;
      1: string;
      2: BN;
      3: BN;
    }>;
    MessageRead: ContractEvent<{
      _receiver: string;
      _sender: string;
      _messageId: BN;
      0: string;
      1: string;
      2: BN;
    }>;
    OwnershipTransferred: ContractEvent<{
      previousOwner: string;
      newOwner: string;
      0: string;
      1: string;
    }>;
    allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => any;
  };
}
