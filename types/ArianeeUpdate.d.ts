/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions, EventOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { TransactionObject, ContractEvent, Callback } from "./types";

export class ArianeeUpdate extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): ArianeeUpdate;
  methods: {
    readUpdateSmartAsset(
      _tokenId: number | string,
      _from: string
    ): TransactionObject<BN>;

    getUpdate(
      _tokenId: number | string
    ): TransactionObject<{
      0: boolean;
      1: string;
      2: string;
      3: BN;
    }>;

    updateSmartAsset(
      _tokenId: number | string,
      _imprint: string | number[],
      _issuer: string,
      _reward: number | string
    ): TransactionObject<void>;

    updateStoreAddress(_newStoreAddress: string): TransactionObject<void>;

    owner(): TransactionObject<string>;

    getUpdatedImprint(_tokenId: number | string): TransactionObject<string>;

    getImprint(_tokenId: number | string): TransactionObject<string>;

    storeAddress(): TransactionObject<string>;

    transferOwnership(_newOwner: string): TransactionObject<void>;
  };
  events: {
    SmartAssetUpdated: ContractEvent<{
      _tokenId: BN;
      _imprint: string;
      0: BN;
      1: string;
    }>;
    StoreAddressUpdated: ContractEvent<string>;
    SmartAssetUpdateReaded: ContractEvent<BN>;
    OwnershipTransferred: ContractEvent<{
      previousOwner: string;
      newOwner: string;
      0: string;
      1: string;
    }>;
    allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => any;
  };
}
