/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import {Contract, ContractOptions } from "web3-eth-contract";
import { TransactionObject } from "./types";

export class ArianeeIdentity extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): ArianeeIdentity;
  methods: {
    waitingURI(_identity: string): TransactionObject<string>;

    compromiseIdentityDate(_identity: string): TransactionObject<BN>;

    waitingImprint(_identity: string): TransactionObject<string>;

    addressFromId(_id: string | number[]): TransactionObject<string>;

    addressURI(_identity: string): TransactionObject<string>;

    addressImprint(_identity: string): TransactionObject<string>;

    addressIsApproved(_identity: string): TransactionObject<boolean>;

    updateValidatorAddress(
      _newValidatorAddress: string
    ): TransactionObject<void>;

    updateBouncerAddress(_newBouncerAddress: string): TransactionObject<void>;

    removeAddressFromApprovedList(_identity: string): TransactionObject<void>;

    validateInformation(
      _identity: string,
      _uriToValidate: string,
      _imprintToValidate: string | number[]
    ): TransactionObject<void>;

    updateCompromiseDate(
      _identity: string,
      _compromiseDate: number | string
    ): TransactionObject<void>;

    updateInformations(
      _uri: string,
      _imprint: string | number[]
    ): TransactionObject<void>;

    addAddressToApprovedList(_newIdentity: string): TransactionObject<string>;

    transferOwnership(_newOwner: string): TransactionObject<void>;

    validatorAddress(): TransactionObject<string>;
    owner(): TransactionObject<string>;
    bouncerAddress(): TransactionObject<string>;
  };

}
