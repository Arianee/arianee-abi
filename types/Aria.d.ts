/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import BN from "bn.js";
import { Contract, ContractOptions, EventOptions } from "web3-eth-contract";
import { EventLog } from "web3-core";
import { TransactionObject, ContractEvent, Callback } from "./types";

export class Aria extends Contract {
  constructor(
    jsonInterface: any[],
    address?: string,
    options?: ContractOptions
  );
  clone(): Aria;
  methods: {
    supportsInterface(
      _interfaceID: string | number[]
    ): TransactionObject<boolean>;

    name(): TransactionObject<string>;

    approve(
      _spender: string,
      _value: number | string
    ): TransactionObject<boolean>;

    totalSupply(): TransactionObject<BN>;

    transferFrom(
      _from: string,
      _to: string,
      _value: number | string
    ): TransactionObject<boolean>;

    decimals(): TransactionObject<BN>;

    balanceOf(_owner: string): TransactionObject<BN>;

    symbol(): TransactionObject<string>;

    transfer(_to: string, _value: number | string): TransactionObject<boolean>;

    allowance(_owner: string, _spender: string): TransactionObject<BN>;
  };
  events: {
    Transfer: ContractEvent<{
      _from: string;
      _to: string;
      _value: BN;
      0: string;
      1: string;
      2: BN;
    }>;
    Approval: ContractEvent<{
      _owner: string;
      _spender: string;
      _value: BN;
      0: string;
      1: string;
      2: BN;
    }>;
    allEvents: (options?: EventOptions, cb?: Callback<EventLog>) => any;
  };
}
