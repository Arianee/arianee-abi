/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumberish,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "./common";

export type OwnershipProofStruct = {
  _pA: [BigNumberish, BigNumberish];
  _pB: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]];
  _pC: [BigNumberish, BigNumberish];
  _pubSignals: [BigNumberish, BigNumberish, BigNumberish];
};

export type OwnershipProofStructOutput = [
  _pA: [bigint, bigint],
  _pB: [[bigint, bigint], [bigint, bigint]],
  _pC: [bigint, bigint],
  _pubSignals: [bigint, bigint, bigint]
] & {
  _pA: [bigint, bigint];
  _pB: [[bigint, bigint], [bigint, bigint]];
  _pC: [bigint, bigint];
  _pubSignals: [bigint, bigint, bigint];
};

export type CreditNoteProofStruct = {
  _pA: [BigNumberish, BigNumberish];
  _pB: [[BigNumberish, BigNumberish], [BigNumberish, BigNumberish]];
  _pC: [BigNumberish, BigNumberish];
  _pubSignals: [BigNumberish, BigNumberish, BigNumberish, BigNumberish];
};

export type CreditNoteProofStructOutput = [
  _pA: [bigint, bigint],
  _pB: [[bigint, bigint], [bigint, bigint]],
  _pC: [bigint, bigint],
  _pubSignals: [bigint, bigint, bigint, bigint]
] & {
  _pA: [bigint, bigint];
  _pB: [[bigint, bigint], [bigint, bigint]];
  _pC: [bigint, bigint];
  _pubSignals: [bigint, bigint, bigint, bigint];
};

export interface ArianeeIssuerProxyInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "ArianeeIssuerProxyStorageV0Location"
      | "DEFAULT_ADMIN_ROLE"
      | "acceptEvent"
      | "addCreditFreeSender"
      | "addCreditFreeSenderBatch"
      | "addCreditNotePool"
      | "addTokenAccess"
      | "approve"
      | "commitmentHashes"
      | "createEvent"
      | "createMessage"
      | "destroy"
      | "destroyEvent"
      | "getRoleAdmin"
      | "getStoreAddress"
      | "grantRole"
      | "hasRole"
      | "hydrateToken"
      | "initialize"
      | "invalidateUnorderedNonces"
      | "isTrustedForwarder"
      | "recoverTokenToIssuer"
      | "refuseEvent"
      | "removeCreditFreeSender"
      | "removeCreditFreeSenderBatch"
      | "renounceRole"
      | "reserveToken"
      | "revokeRole"
      | "safeTransferFrom"
      | "setMissingStatus"
      | "setStolenStatus"
      | "supportsInterface"
      | "transferFrom"
      | "trustedForwarder"
      | "unsetMissingStatus"
      | "unsetStolenStatus"
      | "updateCommitment"
      | "updateCommitmentBatch"
      | "updateDestroyEventRequest"
      | "updateRecoveryRequest"
      | "updateSmartAsset"
      | "updateTokenURI"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic:
      | "CreditFreeSenderAdded"
      | "CreditFreeSenderLog"
      | "CreditFreeSenderRemoved"
      | "CreditNotePoolAdded"
      | "Initialized"
      | "RoleAdminChanged"
      | "RoleGranted"
      | "RoleRevoked"
      | "TokenCommitmentRegistered"
      | "TokenCommitmentUnregistered"
      | "TokenCommitmentUpdated"
      | "UnorderedNonceInvalidation"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "ArianeeIssuerProxyStorageV0Location",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "acceptEvent",
    values: [OwnershipProofStruct, BigNumberish, BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addCreditFreeSender",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addCreditFreeSenderBatch",
    values: [AddressLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "addCreditNotePool",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "addTokenAccess",
    values: [
      OwnershipProofStruct,
      BigNumberish,
      AddressLike,
      boolean,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "approve",
    values: [OwnershipProofStruct, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "commitmentHashes",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "createEvent",
    values: [
      OwnershipProofStruct,
      CreditNoteProofStruct,
      AddressLike,
      BigNumberish,
      BigNumberish,
      BytesLike,
      string,
      AddressLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "createMessage",
    values: [
      OwnershipProofStruct,
      CreditNoteProofStruct,
      AddressLike,
      BigNumberish,
      BigNumberish,
      BytesLike,
      AddressLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "destroy",
    values: [OwnershipProofStruct, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "destroyEvent",
    values: [OwnershipProofStruct, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getRoleAdmin",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getStoreAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "grantRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hasRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "hydrateToken",
    values: [
      OwnershipProofStruct,
      CreditNoteProofStruct,
      AddressLike,
      BigNumberish,
      BigNumberish,
      BytesLike,
      string,
      AddressLike,
      BigNumberish,
      boolean,
      AddressLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initialize",
    values: [
      AddressLike,
      AddressLike,
      AddressLike,
      AddressLike,
      AddressLike,
      AddressLike,
      AddressLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "invalidateUnorderedNonces",
    values: [
      OwnershipProofStruct,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "isTrustedForwarder",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "recoverTokenToIssuer",
    values: [OwnershipProofStruct, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "refuseEvent",
    values: [OwnershipProofStruct, BigNumberish, BigNumberish, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeCreditFreeSender",
    values: [AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeCreditFreeSenderBatch",
    values: [AddressLike[]]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "reserveToken",
    values: [BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "revokeRole",
    values: [BytesLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "safeTransferFrom",
    values: [
      OwnershipProofStruct,
      AddressLike,
      AddressLike,
      BigNumberish,
      BytesLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setMissingStatus",
    values: [OwnershipProofStruct, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setStolenStatus",
    values: [OwnershipProofStruct, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "supportsInterface",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "transferFrom",
    values: [OwnershipProofStruct, AddressLike, AddressLike, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "trustedForwarder",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "unsetMissingStatus",
    values: [OwnershipProofStruct, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "unsetStolenStatus",
    values: [OwnershipProofStruct, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateCommitment",
    values: [OwnershipProofStruct, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "updateCommitmentBatch",
    values: [OwnershipProofStruct[], BigNumberish[], BigNumberish[]]
  ): string;
  encodeFunctionData(
    functionFragment: "updateDestroyEventRequest",
    values: [OwnershipProofStruct, BigNumberish, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "updateRecoveryRequest",
    values: [OwnershipProofStruct, BigNumberish, boolean]
  ): string;
  encodeFunctionData(
    functionFragment: "updateSmartAsset",
    values: [
      OwnershipProofStruct,
      CreditNoteProofStruct,
      AddressLike,
      BigNumberish,
      BytesLike,
      AddressLike
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "updateTokenURI",
    values: [OwnershipProofStruct, BigNumberish, string]
  ): string;

  decodeFunctionResult(
    functionFragment: "ArianeeIssuerProxyStorageV0Location",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "DEFAULT_ADMIN_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "acceptEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addCreditFreeSender",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addCreditFreeSenderBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addCreditNotePool",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addTokenAccess",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "approve", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "commitmentHashes",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createMessage",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "destroy", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "destroyEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getRoleAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getStoreAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "grantRole", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "hasRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "hydrateToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "initialize", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "invalidateUnorderedNonces",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isTrustedForwarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "recoverTokenToIssuer",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "refuseEvent",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeCreditFreeSender",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeCreditFreeSenderBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "reserveToken",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "revokeRole", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "safeTransferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMissingStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setStolenStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "supportsInterface",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "transferFrom",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "trustedForwarder",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsetMissingStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "unsetStolenStatus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateCommitment",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateCommitmentBatch",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateDestroyEventRequest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateRecoveryRequest",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateSmartAsset",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "updateTokenURI",
    data: BytesLike
  ): Result;
}

export namespace CreditFreeSenderAddedEvent {
  export type InputTuple = [_sender: AddressLike];
  export type OutputTuple = [_sender: string];
  export interface OutputObject {
    _sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CreditFreeSenderLogEvent {
  export type InputTuple = [_sender: AddressLike, _creditType: BigNumberish];
  export type OutputTuple = [_sender: string, _creditType: bigint];
  export interface OutputObject {
    _sender: string;
    _creditType: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CreditFreeSenderRemovedEvent {
  export type InputTuple = [_sender: AddressLike];
  export type OutputTuple = [_sender: string];
  export interface OutputObject {
    _sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace CreditNotePoolAddedEvent {
  export type InputTuple = [_creditNotePool: AddressLike];
  export type OutputTuple = [_creditNotePool: string];
  export interface OutputObject {
    _creditNotePool: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace InitializedEvent {
  export type InputTuple = [version: BigNumberish];
  export type OutputTuple = [version: bigint];
  export interface OutputObject {
    version: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleAdminChangedEvent {
  export type InputTuple = [
    role: BytesLike,
    previousAdminRole: BytesLike,
    newAdminRole: BytesLike
  ];
  export type OutputTuple = [
    role: string,
    previousAdminRole: string,
    newAdminRole: string
  ];
  export interface OutputObject {
    role: string;
    previousAdminRole: string;
    newAdminRole: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleGrantedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace RoleRevokedEvent {
  export type InputTuple = [
    role: BytesLike,
    account: AddressLike,
    sender: AddressLike
  ];
  export type OutputTuple = [role: string, account: string, sender: string];
  export interface OutputObject {
    role: string;
    account: string;
    sender: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TokenCommitmentRegisteredEvent {
  export type InputTuple = [
    _commitmentHash: BigNumberish,
    _tokenId: BigNumberish
  ];
  export type OutputTuple = [_commitmentHash: bigint, _tokenId: bigint];
  export interface OutputObject {
    _commitmentHash: bigint;
    _tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TokenCommitmentUnregisteredEvent {
  export type InputTuple = [
    _commitmentHash: BigNumberish,
    _tokenId: BigNumberish
  ];
  export type OutputTuple = [_commitmentHash: bigint, _tokenId: bigint];
  export interface OutputObject {
    _commitmentHash: bigint;
    _tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace TokenCommitmentUpdatedEvent {
  export type InputTuple = [
    _previousCommitmentHash: BigNumberish,
    _newCommitmentHash: BigNumberish,
    _tokenId: BigNumberish
  ];
  export type OutputTuple = [
    _previousCommitmentHash: bigint,
    _newCommitmentHash: bigint,
    _tokenId: bigint
  ];
  export interface OutputObject {
    _previousCommitmentHash: bigint;
    _newCommitmentHash: bigint;
    _tokenId: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace UnorderedNonceInvalidationEvent {
  export type InputTuple = [
    _commitmentHash: BigNumberish,
    _word: BigNumberish,
    _mask: BigNumberish
  ];
  export type OutputTuple = [
    _commitmentHash: bigint,
    _word: bigint,
    _mask: bigint
  ];
  export interface OutputObject {
    _commitmentHash: bigint;
    _word: bigint;
    _mask: bigint;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface ArianeeIssuerProxy extends BaseContract {
  connect(runner?: ContractRunner | null): ArianeeIssuerProxy;
  waitForDeployment(): Promise<this>;

  interface: ArianeeIssuerProxyInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  ArianeeIssuerProxyStorageV0Location: TypedContractMethod<
    [],
    [string],
    "view"
  >;

  DEFAULT_ADMIN_ROLE: TypedContractMethod<[], [string], "view">;

  acceptEvent: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _eventId: BigNumberish,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  addCreditFreeSender: TypedContractMethod<
    [_sender: AddressLike],
    [void],
    "nonpayable"
  >;

  addCreditFreeSenderBatch: TypedContractMethod<
    [_senders: AddressLike[]],
    [void],
    "nonpayable"
  >;

  addCreditNotePool: TypedContractMethod<
    [_creditNotePool: AddressLike],
    [void],
    "nonpayable"
  >;

  addTokenAccess: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _key: AddressLike,
      _enable: boolean,
      _tokenType: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  approve: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _approved: AddressLike,
      _tokenId: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  commitmentHashes: TypedContractMethod<
    [_tokenId: BigNumberish],
    [bigint],
    "view"
  >;

  createEvent: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _creditNoteProof: CreditNoteProofStruct,
      _creditNotePool: AddressLike,
      _tokenId: BigNumberish,
      _eventId: BigNumberish,
      _imprint: BytesLike,
      _uri: string,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  createMessage: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _creditNoteProof: CreditNoteProofStruct,
      _creditNotePool: AddressLike,
      _messageId: BigNumberish,
      _tokenId: BigNumberish,
      _imprint: BytesLike,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  destroy: TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  destroyEvent: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _eventId: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  getRoleAdmin: TypedContractMethod<[role: BytesLike], [string], "view">;

  getStoreAddress: TypedContractMethod<[], [string], "view">;

  grantRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  hasRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;

  hydrateToken: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _creditNoteProof: CreditNoteProofStruct,
      _creditNotePool: AddressLike,
      _commitmentHash: BigNumberish,
      _tokenId: BigNumberish,
      _imprint: BytesLike,
      _uri: string,
      _encryptedInitialKey: AddressLike,
      _tokenRecoveryTimestamp: BigNumberish,
      _initialKeyIsRequestKey: boolean,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  initialize: TypedContractMethod<
    [
      _initialAdmin: AddressLike,
      _storeAddress: AddressLike,
      _smartAssetAddress: AddressLike,
      _eventAddress: AddressLike,
      _lostAddress: AddressLike,
      _verifier: AddressLike,
      _poseidon: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  invalidateUnorderedNonces: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _commitmentHash: BigNumberish,
      _wordPos: BigNumberish,
      _mask: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  isTrustedForwarder: TypedContractMethod<
    [forwarder: AddressLike],
    [boolean],
    "view"
  >;

  recoverTokenToIssuer: TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  refuseEvent: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _eventId: BigNumberish,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  removeCreditFreeSender: TypedContractMethod<
    [_sender: AddressLike],
    [void],
    "nonpayable"
  >;

  removeCreditFreeSenderBatch: TypedContractMethod<
    [_senders: AddressLike[]],
    [void],
    "nonpayable"
  >;

  renounceRole: TypedContractMethod<
    [role: BytesLike, callerConfirmation: AddressLike],
    [void],
    "nonpayable"
  >;

  reserveToken: TypedContractMethod<
    [_commitmentHash: BigNumberish, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  revokeRole: TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  safeTransferFrom: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _from: AddressLike,
      _to: AddressLike,
      _tokenId: BigNumberish,
      _data: BytesLike
    ],
    [void],
    "nonpayable"
  >;

  setMissingStatus: TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  setStolenStatus: TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  supportsInterface: TypedContractMethod<
    [interfaceId: BytesLike],
    [boolean],
    "view"
  >;

  transferFrom: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _from: AddressLike,
      _to: AddressLike,
      _tokenId: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  trustedForwarder: TypedContractMethod<[], [string], "view">;

  unsetMissingStatus: TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  unsetStolenStatus: TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;

  updateCommitment: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _newCommitmentHash: BigNumberish
    ],
    [void],
    "nonpayable"
  >;

  updateCommitmentBatch: TypedContractMethod<
    [
      _ownershipProofs: OwnershipProofStruct[],
      _tokenIds: BigNumberish[],
      _newCommitmentHashes: BigNumberish[]
    ],
    [void],
    "nonpayable"
  >;

  updateDestroyEventRequest: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _eventId: BigNumberish,
      _active: boolean
    ],
    [void],
    "nonpayable"
  >;

  updateRecoveryRequest: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _active: boolean
    ],
    [void],
    "nonpayable"
  >;

  updateSmartAsset: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _creditNoteProof: CreditNoteProofStruct,
      _creditNotePool: AddressLike,
      _tokenId: BigNumberish,
      _imprint: BytesLike,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;

  updateTokenURI: TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _uri: string
    ],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "ArianeeIssuerProxyStorageV0Location"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "DEFAULT_ADMIN_ROLE"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "acceptEvent"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _eventId: BigNumberish,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "addCreditFreeSender"
  ): TypedContractMethod<[_sender: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addCreditFreeSenderBatch"
  ): TypedContractMethod<[_senders: AddressLike[]], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addCreditNotePool"
  ): TypedContractMethod<[_creditNotePool: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "addTokenAccess"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _key: AddressLike,
      _enable: boolean,
      _tokenType: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "approve"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _approved: AddressLike,
      _tokenId: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "commitmentHashes"
  ): TypedContractMethod<[_tokenId: BigNumberish], [bigint], "view">;
  getFunction(
    nameOrSignature: "createEvent"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _creditNoteProof: CreditNoteProofStruct,
      _creditNotePool: AddressLike,
      _tokenId: BigNumberish,
      _eventId: BigNumberish,
      _imprint: BytesLike,
      _uri: string,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "createMessage"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _creditNoteProof: CreditNoteProofStruct,
      _creditNotePool: AddressLike,
      _messageId: BigNumberish,
      _tokenId: BigNumberish,
      _imprint: BytesLike,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "destroy"
  ): TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "destroyEvent"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _eventId: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "getRoleAdmin"
  ): TypedContractMethod<[role: BytesLike], [string], "view">;
  getFunction(
    nameOrSignature: "getStoreAddress"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "grantRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "hasRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "hydrateToken"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _creditNoteProof: CreditNoteProofStruct,
      _creditNotePool: AddressLike,
      _commitmentHash: BigNumberish,
      _tokenId: BigNumberish,
      _imprint: BytesLike,
      _uri: string,
      _encryptedInitialKey: AddressLike,
      _tokenRecoveryTimestamp: BigNumberish,
      _initialKeyIsRequestKey: boolean,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "initialize"
  ): TypedContractMethod<
    [
      _initialAdmin: AddressLike,
      _storeAddress: AddressLike,
      _smartAssetAddress: AddressLike,
      _eventAddress: AddressLike,
      _lostAddress: AddressLike,
      _verifier: AddressLike,
      _poseidon: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "invalidateUnorderedNonces"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _commitmentHash: BigNumberish,
      _wordPos: BigNumberish,
      _mask: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "isTrustedForwarder"
  ): TypedContractMethod<[forwarder: AddressLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "recoverTokenToIssuer"
  ): TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "refuseEvent"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _eventId: BigNumberish,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "removeCreditFreeSender"
  ): TypedContractMethod<[_sender: AddressLike], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "removeCreditFreeSenderBatch"
  ): TypedContractMethod<[_senders: AddressLike[]], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "renounceRole"
  ): TypedContractMethod<
    [role: BytesLike, callerConfirmation: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "reserveToken"
  ): TypedContractMethod<
    [_commitmentHash: BigNumberish, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "revokeRole"
  ): TypedContractMethod<
    [role: BytesLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "safeTransferFrom"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _from: AddressLike,
      _to: AddressLike,
      _tokenId: BigNumberish,
      _data: BytesLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setMissingStatus"
  ): TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "setStolenStatus"
  ): TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "supportsInterface"
  ): TypedContractMethod<[interfaceId: BytesLike], [boolean], "view">;
  getFunction(
    nameOrSignature: "transferFrom"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _from: AddressLike,
      _to: AddressLike,
      _tokenId: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "trustedForwarder"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "unsetMissingStatus"
  ): TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "unsetStolenStatus"
  ): TypedContractMethod<
    [_ownershipProof: OwnershipProofStruct, _tokenId: BigNumberish],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateCommitment"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _newCommitmentHash: BigNumberish
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateCommitmentBatch"
  ): TypedContractMethod<
    [
      _ownershipProofs: OwnershipProofStruct[],
      _tokenIds: BigNumberish[],
      _newCommitmentHashes: BigNumberish[]
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateDestroyEventRequest"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _eventId: BigNumberish,
      _active: boolean
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateRecoveryRequest"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _active: boolean
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateSmartAsset"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _creditNoteProof: CreditNoteProofStruct,
      _creditNotePool: AddressLike,
      _tokenId: BigNumberish,
      _imprint: BytesLike,
      _interfaceProvider: AddressLike
    ],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "updateTokenURI"
  ): TypedContractMethod<
    [
      _ownershipProof: OwnershipProofStruct,
      _tokenId: BigNumberish,
      _uri: string
    ],
    [void],
    "nonpayable"
  >;

  getEvent(
    key: "CreditFreeSenderAdded"
  ): TypedContractEvent<
    CreditFreeSenderAddedEvent.InputTuple,
    CreditFreeSenderAddedEvent.OutputTuple,
    CreditFreeSenderAddedEvent.OutputObject
  >;
  getEvent(
    key: "CreditFreeSenderLog"
  ): TypedContractEvent<
    CreditFreeSenderLogEvent.InputTuple,
    CreditFreeSenderLogEvent.OutputTuple,
    CreditFreeSenderLogEvent.OutputObject
  >;
  getEvent(
    key: "CreditFreeSenderRemoved"
  ): TypedContractEvent<
    CreditFreeSenderRemovedEvent.InputTuple,
    CreditFreeSenderRemovedEvent.OutputTuple,
    CreditFreeSenderRemovedEvent.OutputObject
  >;
  getEvent(
    key: "CreditNotePoolAdded"
  ): TypedContractEvent<
    CreditNotePoolAddedEvent.InputTuple,
    CreditNotePoolAddedEvent.OutputTuple,
    CreditNotePoolAddedEvent.OutputObject
  >;
  getEvent(
    key: "Initialized"
  ): TypedContractEvent<
    InitializedEvent.InputTuple,
    InitializedEvent.OutputTuple,
    InitializedEvent.OutputObject
  >;
  getEvent(
    key: "RoleAdminChanged"
  ): TypedContractEvent<
    RoleAdminChangedEvent.InputTuple,
    RoleAdminChangedEvent.OutputTuple,
    RoleAdminChangedEvent.OutputObject
  >;
  getEvent(
    key: "RoleGranted"
  ): TypedContractEvent<
    RoleGrantedEvent.InputTuple,
    RoleGrantedEvent.OutputTuple,
    RoleGrantedEvent.OutputObject
  >;
  getEvent(
    key: "RoleRevoked"
  ): TypedContractEvent<
    RoleRevokedEvent.InputTuple,
    RoleRevokedEvent.OutputTuple,
    RoleRevokedEvent.OutputObject
  >;
  getEvent(
    key: "TokenCommitmentRegistered"
  ): TypedContractEvent<
    TokenCommitmentRegisteredEvent.InputTuple,
    TokenCommitmentRegisteredEvent.OutputTuple,
    TokenCommitmentRegisteredEvent.OutputObject
  >;
  getEvent(
    key: "TokenCommitmentUnregistered"
  ): TypedContractEvent<
    TokenCommitmentUnregisteredEvent.InputTuple,
    TokenCommitmentUnregisteredEvent.OutputTuple,
    TokenCommitmentUnregisteredEvent.OutputObject
  >;
  getEvent(
    key: "TokenCommitmentUpdated"
  ): TypedContractEvent<
    TokenCommitmentUpdatedEvent.InputTuple,
    TokenCommitmentUpdatedEvent.OutputTuple,
    TokenCommitmentUpdatedEvent.OutputObject
  >;
  getEvent(
    key: "UnorderedNonceInvalidation"
  ): TypedContractEvent<
    UnorderedNonceInvalidationEvent.InputTuple,
    UnorderedNonceInvalidationEvent.OutputTuple,
    UnorderedNonceInvalidationEvent.OutputObject
  >;

  filters: {
    "CreditFreeSenderAdded(address)": TypedContractEvent<
      CreditFreeSenderAddedEvent.InputTuple,
      CreditFreeSenderAddedEvent.OutputTuple,
      CreditFreeSenderAddedEvent.OutputObject
    >;
    CreditFreeSenderAdded: TypedContractEvent<
      CreditFreeSenderAddedEvent.InputTuple,
      CreditFreeSenderAddedEvent.OutputTuple,
      CreditFreeSenderAddedEvent.OutputObject
    >;

    "CreditFreeSenderLog(address,uint256)": TypedContractEvent<
      CreditFreeSenderLogEvent.InputTuple,
      CreditFreeSenderLogEvent.OutputTuple,
      CreditFreeSenderLogEvent.OutputObject
    >;
    CreditFreeSenderLog: TypedContractEvent<
      CreditFreeSenderLogEvent.InputTuple,
      CreditFreeSenderLogEvent.OutputTuple,
      CreditFreeSenderLogEvent.OutputObject
    >;

    "CreditFreeSenderRemoved(address)": TypedContractEvent<
      CreditFreeSenderRemovedEvent.InputTuple,
      CreditFreeSenderRemovedEvent.OutputTuple,
      CreditFreeSenderRemovedEvent.OutputObject
    >;
    CreditFreeSenderRemoved: TypedContractEvent<
      CreditFreeSenderRemovedEvent.InputTuple,
      CreditFreeSenderRemovedEvent.OutputTuple,
      CreditFreeSenderRemovedEvent.OutputObject
    >;

    "CreditNotePoolAdded(address)": TypedContractEvent<
      CreditNotePoolAddedEvent.InputTuple,
      CreditNotePoolAddedEvent.OutputTuple,
      CreditNotePoolAddedEvent.OutputObject
    >;
    CreditNotePoolAdded: TypedContractEvent<
      CreditNotePoolAddedEvent.InputTuple,
      CreditNotePoolAddedEvent.OutputTuple,
      CreditNotePoolAddedEvent.OutputObject
    >;

    "Initialized(uint64)": TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;
    Initialized: TypedContractEvent<
      InitializedEvent.InputTuple,
      InitializedEvent.OutputTuple,
      InitializedEvent.OutputObject
    >;

    "RoleAdminChanged(bytes32,bytes32,bytes32)": TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;
    RoleAdminChanged: TypedContractEvent<
      RoleAdminChangedEvent.InputTuple,
      RoleAdminChangedEvent.OutputTuple,
      RoleAdminChangedEvent.OutputObject
    >;

    "RoleGranted(bytes32,address,address)": TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;
    RoleGranted: TypedContractEvent<
      RoleGrantedEvent.InputTuple,
      RoleGrantedEvent.OutputTuple,
      RoleGrantedEvent.OutputObject
    >;

    "RoleRevoked(bytes32,address,address)": TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;
    RoleRevoked: TypedContractEvent<
      RoleRevokedEvent.InputTuple,
      RoleRevokedEvent.OutputTuple,
      RoleRevokedEvent.OutputObject
    >;

    "TokenCommitmentRegistered(uint256,uint256)": TypedContractEvent<
      TokenCommitmentRegisteredEvent.InputTuple,
      TokenCommitmentRegisteredEvent.OutputTuple,
      TokenCommitmentRegisteredEvent.OutputObject
    >;
    TokenCommitmentRegistered: TypedContractEvent<
      TokenCommitmentRegisteredEvent.InputTuple,
      TokenCommitmentRegisteredEvent.OutputTuple,
      TokenCommitmentRegisteredEvent.OutputObject
    >;

    "TokenCommitmentUnregistered(uint256,uint256)": TypedContractEvent<
      TokenCommitmentUnregisteredEvent.InputTuple,
      TokenCommitmentUnregisteredEvent.OutputTuple,
      TokenCommitmentUnregisteredEvent.OutputObject
    >;
    TokenCommitmentUnregistered: TypedContractEvent<
      TokenCommitmentUnregisteredEvent.InputTuple,
      TokenCommitmentUnregisteredEvent.OutputTuple,
      TokenCommitmentUnregisteredEvent.OutputObject
    >;

    "TokenCommitmentUpdated(uint256,uint256,uint256)": TypedContractEvent<
      TokenCommitmentUpdatedEvent.InputTuple,
      TokenCommitmentUpdatedEvent.OutputTuple,
      TokenCommitmentUpdatedEvent.OutputObject
    >;
    TokenCommitmentUpdated: TypedContractEvent<
      TokenCommitmentUpdatedEvent.InputTuple,
      TokenCommitmentUpdatedEvent.OutputTuple,
      TokenCommitmentUpdatedEvent.OutputObject
    >;

    "UnorderedNonceInvalidation(uint256,uint256,uint256)": TypedContractEvent<
      UnorderedNonceInvalidationEvent.InputTuple,
      UnorderedNonceInvalidationEvent.OutputTuple,
      UnorderedNonceInvalidationEvent.OutputObject
    >;
    UnorderedNonceInvalidation: TypedContractEvent<
      UnorderedNonceInvalidationEvent.InputTuple,
      UnorderedNonceInvalidationEvent.OutputTuple,
      UnorderedNonceInvalidationEvent.OutputObject
    >;
  };
}
