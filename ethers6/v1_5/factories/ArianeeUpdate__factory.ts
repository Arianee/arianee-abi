/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type { ArianeeUpdate, ArianeeUpdateInterface } from "../ArianeeUpdate";

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
      {
        name: "_from",
        type: "address",
      },
    ],
    name: "readUpdateSmartAsset",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getUpdate",
    outputs: [
      {
        name: "",
        type: "bool",
      },
      {
        name: "",
        type: "bytes32",
      },
      {
        name: "",
        type: "bytes32",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
      {
        name: "_imprint",
        type: "bytes32",
      },
      {
        name: "_issuer",
        type: "address",
      },
      {
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "updateSmartAsset",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_newStoreAddress",
        type: "address",
      },
    ],
    name: "updateStoreAddress",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getUpdatedImprint",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "getImprint",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "storeAddress",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_smartAssetAddress",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        name: "_imprint",
        type: "bytes32",
      },
    ],
    name: "SmartAssetUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_newStoreAddress",
        type: "address",
      },
    ],
    name: "StoreAddressUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "SmartAssetUpdateReaded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
] as const;

export class ArianeeUpdate__factory {
  static readonly abi = _abi;
  static createInterface(): ArianeeUpdateInterface {
    return new Interface(_abi) as ArianeeUpdateInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ArianeeUpdate {
    return new Contract(address, _abi, runner) as unknown as ArianeeUpdate;
  }
}
