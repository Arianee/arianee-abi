/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ArianeeMessage,
  ArianeeMessageInterface,
} from "../ArianeeMessage";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "messages",
    outputs: [
      {
        name: "imprint",
        type: "bytes32",
      },
      {
        name: "sender",
        type: "address",
      },
      {
        name: "to",
        type: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_messageId",
        type: "uint256",
      },
      {
        name: "_from",
        type: "address",
      },
    ],
    name: "readMessage",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_messageId",
        type: "uint256",
      },
      {
        name: "_tokenId",
        type: "uint256",
      },
      {
        name: "_imprint",
        type: "bytes32",
      },
      {
        name: "_from",
        type: "address",
      },
      {
        name: "_reward",
        type: "uint256",
      },
    ],
    name: "sendMessage",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "",
        type: "address",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    name: "receiverToMessageIds",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_storeAddress",
        type: "address",
      },
    ],
    name: "setStoreAddress",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "owner",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "_receiver",
        type: "address",
      },
    ],
    name: "messageLengthByReceiver",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_whitelistAddress",
        type: "address",
      },
      {
        name: "_smartAssetAddress",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_receiver",
        type: "address",
      },
      {
        indexed: true,
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        name: "_messageId",
        type: "uint256",
      },
    ],
    name: "MessageSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "_receiver",
        type: "address",
      },
      {
        indexed: true,
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        name: "_messageId",
        type: "uint256",
      },
    ],
    name: "MessageRead",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
] as const;

export class ArianeeMessage__factory {
  static readonly abi = _abi;
  static createInterface(): ArianeeMessageInterface {
    return new Interface(_abi) as ArianeeMessageInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ArianeeMessage {
    return new Contract(address, _abi, runner) as unknown as ArianeeMessage;
  }
}
